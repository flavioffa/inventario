-- MySQL Script generated by MySQL Workbench
-- Thu Jun 25 16:16:19 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema inventario
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema inventario
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `inventario` DEFAULT CHARACTER SET utf8 ;
USE `inventario` ;

-- -----------------------------------------------------
-- Table `inventario`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventario`.`users` ;

CREATE TABLE IF NOT EXISTS `inventario`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `rank` VARCHAR(45) NOT NULL,
  `cadre` VARCHAR(45) NOT NULL,
  `email` VARCHAR(100) UNIQUE NOT NULL,
  `password` VARCHAR(200) NOT NULL,
  `is_admin` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventario`.`units`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventario`.`units` ;

CREATE TABLE IF NOT EXISTS `inventario`.`units` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name_unit` VARCHAR(200) NOT NULL,
  `initials_unit` VARCHAR(45) NOT NULL,
  `chief_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `chief_id_idx` (`chief_id` ASC) VISIBLE,
  CONSTRAINT `chief_id`
    FOREIGN KEY (`chief_id`)
    REFERENCES `inventario`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventario`.`divisions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventario`.`divisions` ;

CREATE TABLE IF NOT EXISTS `inventario`.`divisions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name_division` VARCHAR(100) NOT NULL,
  `initials_division` VARCHAR(45) NOT NULL,
  `chief_division_id` INT NOT NULL,
  `division_unit_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `chief_divisions_id_idx` (`chief_division_id` ASC) VISIBLE,
  INDEX `division_unit_id_idx` (`division_unit_id` ASC) VISIBLE,
  CONSTRAINT `chief_divisions_id`
    FOREIGN KEY (`chief_division_id`)
    REFERENCES `inventario`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `division_unit_id`
    FOREIGN KEY (`division_unit_id`)
    REFERENCES `inventario`.`units` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventario`.`location`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventario`.`parts` ;

CREATE TABLE IF NOT EXISTS `inventario`.`parts` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name_part` VARCHAR(100) NOT NULL,
  `division_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `divison_id_idx` (`division_id` ASC) VISIBLE,
  CONSTRAINT `divison_id`
    FOREIGN KEY (`division_id`)
    REFERENCES `inventario`.`divisions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventario`.`type_material`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventario`.`type_material` ;

CREATE TABLE IF NOT EXISTS `inventario`.`type_material` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name_type` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventario`.`model_material`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventario`.`model_material` ;

CREATE TABLE IF NOT EXISTS `inventario`.`model_material` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `model_material` VARCHAR(200) NOT NULL,
  `type_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `type_material_id_idx` (`type_id` ASC) VISIBLE,
  CONSTRAINT `type_id`
    FOREIGN KEY (`type_id`)
    REFERENCES `inventario`.`type_material` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventario`.`manufacturer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventario`.`manufacturer` ;

CREATE TABLE IF NOT EXISTS `inventario`.`manufacturer` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name_manufacturer` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventario`.`material`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventario`.`material` ;

CREATE TABLE IF NOT EXISTS `inventario`.`material` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `model_id` INT NOT NULL,
  `type_material_id` INT NOT NULL,
  `manufacturer_id` INT NOT NULL,
  `location_id` INT NOT NULL,
  `room` INT NULL,
  `origin` VARCHAR(45) NULL,
  `number_unit` INT NOT NULL,
  `number_bmp` INT NULL,
  `number_metallic` INT NULL,
  `number_serial` VARCHAR(100) NULL,
  `status` VARCHAR(45) NOT NULL,
  `gmm_cautela` VARCHAR(100) NOT NULL,
  `obs` VARCHAR(300) NULL,
  `qrcode` VARCHAR(200) NULL,
  PRIMARY KEY (`id`),
  INDEX `type_material_id_idx` (`type_material_id` ASC) VISIBLE,
  INDEX `manufacturer_id_idx` (`manufacturer_id` ASC) VISIBLE,
  INDEX `location_id_idx` (`location_id` ASC) VISIBLE,
  INDEX `description_id_idx` (`model_id` ASC) VISIBLE,
  UNIQUE INDEX `number_unit_UNIQUE` (`number_unit` ASC) VISIBLE,
  UNIQUE INDEX `number_bmp_UNIQUE` (`number_bmp` ASC) VISIBLE,
  UNIQUE INDEX `number_metallic_UNIQUE` (`number_metallic` ASC) VISIBLE,
  CONSTRAINT `type_mat_id`
    FOREIGN KEY (`type_material_id`)
    REFERENCES `inventario`.`type_material` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `manufacturer_id`
    FOREIGN KEY (`manufacturer_id`)
    REFERENCES `inventario`.`manufacturer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `location_id`
    FOREIGN KEY (`location_id`)
    REFERENCES `inventario`.`location` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `model_id`
    FOREIGN KEY (`model_id`)
    REFERENCES `inventario`.`model_material` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventario`.`status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventario`.`status` ;

CREATE TABLE IF NOT EXISTS `inventario`.`status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type_status` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
